/*
Deployment script for ProjMgmtDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "ProjMgmtDB"
:setvar DefaultFilePrefix "ProjMgmtDB"
:setvar DefaultDataPath "C:\Users\Ren\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\Ren\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Altering Procedure [dbo].[spAssignments_List]...';


GO
ALTER PROCEDURE [dbo].[spAssignments_List]
	@id int
AS
begin
	set nocount on;

	SELECT  [a].[Id], [t].[Description], [e].[Email], [a].[StartDate], [a].[EndDate]
	FROM dbo.Assignments a
	INNER JOIN dbo.Tasks t
	ON a.TaskId = t.Id
	INNER JOIN dbo.Employees e
	ON a.EmployeeId = e.Id
	WHERE a.Id = @id
	
end
GO
PRINT N'Altering Procedure [dbo].[spEmployees_Register]...';


GO
ALTER PROCEDURE [dbo].[spEmployees_Register]
	@email nvarchar (30),
	@password nvarchar (30),
	@firstName nvarchar (30),
	@lastName nvarchar (30),
	@roleId int,
	@departmentId int,
	@regionId int,
	@phone nvarchar (30),
	@dateHired datetime2
AS
begin
	set nocount on;

	INSERT INTO dbo.Employees
	(Email, Password, FirstName, LastName, RoleId, DepartmentId, RegionId, Phone, DateHired)
	VALUES (@email, @password, @firstName, @lastName, @roleId, @departmentId, @regionId, @phone, SYSDATETIME())

end
GO
PRINT N'Altering Procedure [dbo].[spTasks_List]...';


GO
ALTER PROCEDURE [dbo].[spTasks_List]
	@id int
AS
begin
	set nocount on;

	SELECT  [t].[Id], [t].[Description], [p].[Title], [t].[BeginDate], [t].[DueDate]
	FROM dbo.Tasks t
	INNER JOIN dbo.Projects p
	ON t.ProjectId = p.Id
	WHERE p.Id = @id
	
end
GO
PRINT N'Creating Procedure [dbo].[spClientProjects_List]...';


GO
CREATE PROCEDURE [dbo].[spClientProjects_List]
	@id int
AS
begin
	set nocount on;

	SELECT  [p].[Id], [p].[Title], [p].[Budget], [p].[StartDate], [p].[EndDate], [c].[Name], [c].[Phone], [c].[Email]
	FROM dbo.Projects p
	INNER JOIN dbo.Clients c
	ON p.ClientId = c.Id
	WHERE c.Id = @id
	
end
GO
PRINT N'Creating Procedure [dbo].[spDepartmentEmployees_List]...';


GO
CREATE PROCEDURE [dbo].[spDepartmentEmployees_List]
	@id int
AS
begin
	set nocount on;

	SELECT  [e].[Id], [e].[FirstName], [e].[LastName], [e].[Phone], [e].[Email], [d].[Department]
	FROM dbo.Employees e
	INNER JOIN dbo.Departments d
	ON e.DepartmentId = d.Id
	WHERE d.Id = @id;
	
end
GO
PRINT N'Creating Procedure [dbo].[spRegionClients_List]...';


GO
CREATE PROCEDURE [dbo].[spRegionClients_List]
	@id int
AS
begin
	set nocount on;

	SELECT  [c].[Id], [c].[Name], [c].[Phone], [c].[Email], [r].[Region], [r].[Code]
	FROM dbo.Clients c
	INNER JOIN dbo.Regions r
	ON c.RegionId = r.Id
	WHERE r.Id = @id
	
end
GO
PRINT N'Creating Procedure [dbo].[spRegionEmployees_List]...';


GO
CREATE PROCEDURE [dbo].[spRegionEmployees_List]
	@id int
AS
begin
	set nocount on;

	SELECT  [e].[Id], [e].[FirstName], [e].[LastName], [e].[Phone], [e].[Email], [r].[Region], [r].[Code]
	FROM dbo.Employees e
	INNER JOIN dbo.Regions r
	ON e.RegionId = r.Id
	WHERE r.Id = @id
	
end
GO
PRINT N'Creating Procedure [dbo].[spRegions_Add]...';


GO
CREATE PROCEDURE [dbo].[spRegions_Add]
	@region nvarchar (30),
	@code nvarchar (30)
AS
begin
	set nocount on;

	INSERT INTO dbo.Regions
	(Region, Code)
	VALUES (@region, @code)

end
GO
PRINT N'Creating Procedure [dbo].[spRoleEmployees_List]...';


GO
CREATE PROCEDURE [dbo].[spRoleEmployees_List]
	@id int
AS
begin
	set nocount on;

	SELECT  [e].[Id], [e].[FirstName], [e].[LastName], [e].[Phone], [e].[Email], [r].[Role]
	FROM dbo.Employees e
	INNER JOIN dbo.Roles r
	ON e.RoleId = r.Id
	WHERE r.Id = @id

end
GO
PRINT N'Update complete.';


GO
